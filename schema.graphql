type Todo {
  id: ID!
  text: String!
  done: Boolean!
  user: User!
}

type User {
  id: ID!
  name: String!
}

type Query {
  todos: [Todo!]!
  namespaces: [Namespace]!
}

input NewTodo {
  text: String!
  userId: String!
}

type Mutation {
  createTodo(input: NewTodo!): Todo!
}

type Namespace {
  name: String!
  kmakes: [Kmake]!
}

type Kmake {
  name: String!
  variables: [Variable]!
  rules: [Rule]!
  status: String
}

type Variable {
  name: String!
  value: String!
}

type Rule {
  targets:       [String]!
  doublecolon:   Boolean!
  commands:      [String]!
  prereqs:       [String]!
  targetpattern: String!
}
